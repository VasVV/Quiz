{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["questionsAnswers","id","question","answers","correctAnswer","Quiz","props","loadQuiz","document","getElementById","className","disabled","setState","state","currentQuestion","questionNumber","options","totalQuestions","length","btncontents","rightWrong","componentDidMount","restartQuiz","window","location","href","clickHandler","e","userAnswer","btns","getElementsByTagName","console","log","map","checkAnswer","correctCount","this","onClick","c","React","Component","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","App"],"mappings":"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","file":"static/js/main.5c38aec5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nconst questionsAnswers = [\n  {\n    id: 1,\n    question: \"Who is the president of Russia?\",\n    answers: [\"Vladimir Putin\", \"Dmitri Medvedev\", \"Nikolai II\"],\n    correctAnswer: \"Vladimir Putin\",\n  },\n  {\n    id: 2,\n    question: \"When did the Second World War take place?\",\n    answers: [\"1941-1945\", \"1939-1945\", \"1938-1941\"],\n    correctAnswer: \"1939-1945\",\n  },\n  {\n    id: 3,\n    question: \"What was the name of the first man in space?\",\n    answers: [\"Andrei\", \"Alexander\", \"Yuri\"],\n    correctAnswer: \"Yuri\",\n  },\n  {\n    id: 4,\n    question: \"What is the tallest mountain on Earth?\",\n    answers: [\"Everest\", \"Catmandou\", \"Rushmore\"],\n    correctAnswer: \"Everest\",\n  },\n  {\n    id: 5,\n    question: \"Russian October revolution happened in\",\n    answers: [\"1916\", \"1917\", \"1920\"],\n    correctAnswer: \"1917\",\n  },\n];\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAnswer: \"\",\n      currentQuestion: \"\",\n      options: [],\n      correctAnswer: \"\",\n      questionNumber: 0,\n      rightWrong: \"\",\n      totalQuestions: \"\",\n      btncontents: \"Submit\",\n      correctCount: 0,\n    };\n  }\n\n  loadQuiz = () => {\n    //let q = questionsAnswers\n    document.getElementById(\"next\").className = \"next\";\n    document.getElementById(\"submit\").disabled = false;\n    this.setState((state, props) => ({\n      currentQuestion: questionsAnswers[this.state.questionNumber].question,\n      options: questionsAnswers[this.state.questionNumber].answers,\n      correctAnswer: questionsAnswers[this.state.questionNumber].correctAnswer,\n      totalQuestions: questionsAnswers.length,\n      btncontents: \"Submit\",\n      rightWrong: \"\",\n    }));\n  };\n  componentDidMount = () => {\n    this.loadQuiz();\n  };\n  restartQuiz = () => {\n    window.location.href = window.location.href;\n  };\n\n  clickHandler = (e) => {\n    if (this.state.userAnswer == \"\") {\n      document.getElementById(e).className = \"highlight\";\n    } else {\n      let btns = [\n        ...document.getElementById(\"answers\").getElementsByTagName(\"button\"),\n      ];\n      console.log(btns);\n      btns.map((e) => {\n        e.className = \"\";\n      });\n      document.getElementById(e).className = \"highlight\";\n    }\n    this.setState({\n      userAnswer: e,\n    });\n  };\n  checkAnswer = () => {\n    if (this.state.userAnswer == \"\") {\n      this.setState({\n        rightWrong: \"Please choose of the options\",\n      });\n      return;\n    }\n    let btns = [\n      ...document.getElementById(\"answers\").getElementsByTagName(\"button\"),\n    ];\n    if (this.state.totalQuestions == this.state.questionNumber + 1) {\n      document.getElementById(\"results\").className = \"visible\";\n      document.getElementById(\"next\").disabled = true;\n      btns.map((e) => {\n        e.disabled = true;\n      });\n    }\n    document.getElementById(\"submit\").disabled = true;\n    if (this.state.userAnswer == this.state.correctAnswer) {\n      this.setState((state, props) => ({\n        rightWrong: \"Right\",\n        correctCount: this.state.correctCount + 1,\n      }));\n      this.setState((state, props) => ({\n        questionNumber: this.state.questionNumber + 1,\n        btncontents: \"Next\",\n      }));\n\n      //  console.log(document.getElementById('next').className)\n      document.getElementById(\"next\").className = \"visible\";\n      //console.log(document.getElementById('next').className)\n    } else {\n      console.log(btns);\n      document.getElementById(\"submit\").disabled = true;\n      btns.map((e) => {\n        e.disabled = true;\n        if (e.id == this.state.correctAnswer && e.className != \"highlight\") {\n          e.className = \"highlight\";\n        } else if (e.className == \"highlight\") {\n          e.className = \"wrong\";\n          btns.map((e) => (e.disabled = true));\n        }\n        this.setState((state, props) => ({\n          questionNumber: this.state.questionNumber + 1,\n          rightWrong: \"Wrong\",\n        }));\n        //this.loadQuiz();\n        document.getElementById(\"next\").className = \"visible\";\n        console.log(this.state);\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div id=\"question\">\n          <h2>{this.state.currentQuestion}</h2>{\" \"}\n        </div>\n        <div id=\"rightwrong\">\n          <h1>{this.state.rightWrong}</h1>\n        </div>\n        <ul id=\"answers\">\n          {this.state.options.map((e) => {\n            return (\n              <li key={e}>\n                <button\n                  className=\"btn\"\n                  onClick={() => this.clickHandler(e)}\n                  id={e}\n                  c\n                >\n                  {e}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        <button id=\"submit\" className=\"btn control\" onClick={this.checkAnswer}>\n          Submit!\n        </button>\n        <button className=\"next btn control\" id=\"next\" onClick={this.loadQuiz}>\n          Next!\n        </button>\n        <div id=\"results\" className=\"results\">\n          You answered {this.state.correctCount} question\n          {this.state.correctCount == 1 ? \"\" : \"s\"} out of{\" \"}\n          {this.state.totalQuestions} correctly!\n          <button onClick={this.restartQuiz}>Try again</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n\nReactDOM.render(<Quiz />, document.getElementById(\"root\"));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}